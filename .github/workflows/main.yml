# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
<<<<<<< HEAD
    branches: [ githubtest ]
=======
    branches: [ dronetest ]
>>>>>>> 0421e4450aeb637344bc8b053ecc07f0ca898bbb
  pull_request:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

<<<<<<< HEAD
      - name: change directory
        working-directory: cloudpanel
        run: ls -alh

      - name: test directory
        run: mkdir $HOME/poetry

      - name: create poetry home directory
        run: apt-get update && apt-get install python3-venv -y

      - name: install packages
        run: curl -sSL https://install.python-poetry.org | POETRY_HOME="$HOME/poetry/"  python3 - --version 1.1.6
      
      - name: install packages locally 
        run: $HOME/poetry/bin/poetry config experimental.new-installer false && $HOME/poetry/bin/poetry config virtualenvs.create true 
      
      - name: install django packages
        run: $HOME/poetry/bin/poetry config --list && $HOME/poetry/bin/poetry install 

      - name: Current directory structures for see .venv
        run: ls -la ./

      # - name: run pytest
      #   run: $HOME/poetry/bin/poetry run python3 -m pytest
      # - name: Show home poetry it had set before as poetry home 
      #   run: ls -lah $HOME/poetry/ 
=======
      # Runs a single command using the runners shell
      - name: Install poetry
        run: apt-get update -y && apt-get install python3-venv -y 

      - name: create poetry home directory
        run: mkdir $HOME/poetry

      - name: install packages
        run: curl -sSL https://install.python-poetry.org | POETRY_HOME=$USER/poetry python3 - 
      
      - name: install packages locally 
        run: $USER/poetry/bin/poetry config virtualenvs.path ".venv" && $USER/poetry/bin/poetry config virtualenvs.create true --local
      - name: install django packages
        run: $USER/poetry/bin/poetry install && ls -l
>>>>>>> 0421e4450aeb637344bc8b053ecc07f0ca898bbb
